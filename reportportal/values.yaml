## String to partially override reportportal.fullname template (will maintain the release name)
##
# nameOverride:

## String to fully override reportportal.fullname template
##
# fullnameOverride:

serviceindex:
  name: index
  repository: reportportal/service-index
  tag: 5.0.11
  pullPolicy: Always
  resources:
    requests:
      cpu: 150m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  podAnnotations: {}
  securityContext: {}

uat:
  repository: reportportal/service-authorization
  name: uat
  tag: 5.6.3
  pullPolicy: Always
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 2048Mi
  sessionLiveTime: 86400
  podAnnotations: {}
  ## jvmArgs
  ## If you need to use a custom java keystore you can use it through jvmArgs
  ## eg. : -Djavax.net.ssl.trustStore=/etc/secret-volume/custom-pki.jks 
  jvmArgs: "-Djava.security.egd=file:/dev/./urandom -XX:MinRAMPercentage=60.0 -XX:MaxRAMPercentage=90.0"
  ## Additional environment variables
  ##
  additionalEnvironments: {}
  #   env: value
  securityContext: {}
  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  serviceAccountName: ""
  ## Provide a secret containing sensitives data
  ## eg. : provide a custom java keystore used in jvmArgs
  ##
  ## keytool -genkeypair -storetype jks -alias todelete -keypass changeit -storepass changeit -keystore custom-pki.jks -dname "CN=Developer, OU=Department, O=Company, L=City, ST=State, C=CA"
  ## keytool -delete -alias todelete -storepass changeit -keystore custom-pki.jks
  ## keytool -list -keystore custom-pki.jks -storepass changeit
  ## 
  ## Generate base64 data and paste it in your values.yaml :
  ## cat custom-pki.jks | base64 -w 
  secret:
    enabled: false
    mountPath: /etc/secret-volume
    readOnly: true
    data: {}
    #  custom-pki.jks: <base64-data>

serviceui:
  repository: reportportal/service-ui
  tag: 5.6.0
  name: ui
  pullPolicy: Always
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  podAnnotations: {}
  securityContext: {}
  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  #  disktype: ssd
  serviceAccountName: ""

serviceapi:
  repository: reportportal/service-api
  tag: 5.6.3
  name: api
  pullPolicy: Always
  replicaCount: 1
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 20
    timeoutSeconds: 3
    failureThreshold: 20
  resources:
    requests:
      cpu: 500m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
  jvmArgs: "-Djava.security.egd=file:/dev/./urandom -XX:+UseG1GC -XX:MinRAMPercentage=60.0 -XX:InitiatingHeapOccupancyPercent=70 -XX:MaxRAMPercentage=90.0 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp"
  queues:
    totalNumber:
    perPodNumber:
  ## Additional environment variables
  ##
  additionalEnvironments: {}
  #  env: value
  podAnnotations: {}
  securityContext: {}
  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  #  disktype: ssd
  serviceAccountName: ""

servicejobs:
  repository: reportportal/service-jobs
  tag: 5.6.3
  name: jobs
  pullPolicy: Always
  coreJobs:
    cleanAttachmentCron: 0 0 */24 * * *
    cleanLogCron: 0 0 */24 * * *
    cleanLaunchCron: 0 0 */24 * * *
    cleanStorageCron: 0 0 */24 * * *
    storageProjectCron: 0 */5 * * * *
  chunksize: 1000
  resources:
    requests:
      cpu: 100m
      memory: 248Mi
    limits:
      cpu: 100m
      memory: 372Mi
  jvmArgs: ""
  ## Additional environment variables
  ##
  additionalEnvironments: {}
  #  env: value
  podAnnotations: {}
  securityContext: {}
  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  #  disktype: ssd
  serviceAccountName: ""

migrations:
  repository: reportportal/migrations
  tag: 5.6.0
  pullPolicy: Always
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi
  podAnnotations: {}
  securityContext: {}
  nodeSelector: {}
  #  disktype: ssd
  serviceAccountName: ""
  metadataAnnotations:
    enabled: true
    hooks:
      "helm.sh/hook": "pre-install,pre-upgrade"
      "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"

serviceanalyzer:
  repository: reportportal/service-auto-analyzer
  tag: 5.6.0
  name: analyzer
  pullPolicy: Always
  uwsgiWorkers: 2
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 100m
      memory: 512Mi
  podAnnotations: {}
  securityContext: {}
  ## Additional environment variables
  ##
  additionalEnvironments: {}
  #  ES_CHUNK_NUMBER: 2000
  ##
  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  #  disktype: ssd
  serviceAccountName: ""

serviceanalyzertrain:
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 200m
      memory: 512Mi
  podAnnotations: {}
  securityContext: {}
  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  #  disktype: ssd
  serviceAccountName: ""

metricsgatherer:
  repository: reportportal/service-metrics-gatherer
  tag: 1.1.17
  name: metrics-gatherer
  loggingLevel: debug
  timeManagement:
    starttime: 22:00
    endtime: 08:00
    timezone: Europe/Minsk
  maxDaysStore: 500
  resources:
    requests:
      cpu: 8m
      memory: 128Mi
    limits:
      cpu: 16m
      memory: 256Mi
  podAnnotations: {}
  securityContext: {}
  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  #  disktype: ssd
  serviceAccountName: ""

rabbitmq:
  SecretName: ""
  installdep:
    enable: false
  endpoint:
    address: <rabbitmq-release-name>-rabbitmq.default.svc.cluster.local
    port: 5672
    user: rabbitmq
    apiport: 15672
    apiuser: rabbitmq
    password:

postgresql:
  SecretName: ""
  installdep:
    enable: false
  endpoint:
    address: <postgresql-release-name>-postgresql.default.svc.cluster.local
    port: 5432
    user: rpuser
    dbName: reportportal
    ssl: disabled
    ## Whether or not to use SSL
    # ssl: disabled / require
    password:
    ## Number of database connections
    connections: 

elasticsearch:
  installdep:
    enable: false
  endpoint: http://elasticsearch-master:9200

minio:
  secretName: ""
  enabled: true
  installdep:
    enable: false
  endpoint: http://<minio-release-name>.default.svc.cluster.local:9000
  endpointshort: <minio-release-name>.default.svc.cluster.local:9000
  region: ""
  accesskey: <minio-accesskey>
  secretkey: <minio-secretkey>
  bucketPrefix: ""
  defaultBucketName: ""
  integrationSaltPath: ""

# Ingress configuration for the ui
# If you have installed ingress controller and want to expose application - set INGRESS.ENABLE to true.
# If you have some domain name set INGRESS.USEDOMAINNAME variable to true and set this fqdn to INGRESS.HOSTS
# If you don't have any domain names - set INGRESS.USEDOMAINNAME to false
ingress:
  enable: true
  # IF YOU HAVE SOME DOMAIN NAME SET INGRESS.USEDOMAINNAME to true
  usedomainname: false
  hosts:
    - reportportal.k8.com
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/x-forwarded-prefix: /$1
    nginx.ingress.kubernetes.io/proxy-body-size: 128m
    nginx.ingress.kubernetes.io/proxy-buffer-size: 512k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: 512k
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "8000"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "4000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "4000"

# tolerations for all components, if any (requires Kubernetes >= 1.6)
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule|NoExecute"

# RBAC is required for service-index in order to collect status/info over all services
rbac:
  create: true
  serviceAccount:
    create: true
    name: reportportal
    # For AWS IAM role association use the following annotations
    ## See: https://docs.aws.amazon.com/eks/latest/userguide/specify-service-account-role.html
    annotations: {}

rp:
  infoEndpoint: "/info"
  healthEndpoint: "/health"
